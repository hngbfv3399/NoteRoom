rules_version = '2';

// Craft rules based on data in your Firestore database
// allow write: if firestore.get(
//    /databases/(default)/documents/users/$(request.auth.uid)).data.isAdmin;
service firebase.storage {
  match /b/{bucket}/o {
    // 기본 함수들
    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    function isImageType() {
      return request.resource.contentType.matches('image/.*');
    }

    function isValidFileSize() {
      return request.resource.size <= 5 * 1024 * 1024; // 5MB 제한
    }

    // 노트 이미지 규칙 (일반 노트 이미지)
    match /notes/{userId}/{imageId} {
      // 읽기는 모든 인증된 사용자에게 허용
      allow read: if isAuthenticated();
      
      // 쓰기는 파일 소유자만 가능하며, 이미지 타입과 크기 제한 적용
      allow create: if isOwner(userId)
        && isImageType()
        && isValidFileSize();
      
      allow update, delete: if isOwner(userId);
    }

    // 노트 컨텐츠 이미지 규칙 (에디터 내 이미지)
    match /notes/content/{userId}/{imageId} {
      // 읽기는 모든 인증된 사용자에게 허용
      allow read: if isAuthenticated();
      
      // 쓰기는 파일 소유자만 가능하며, 이미지 타입과 크기 제한 적용
      allow create: if isOwner(userId)
        && isImageType()
        && isValidFileSize();
      
      allow update, delete: if isOwner(userId);
    }

    // 프로필 이미지 규칙
    match /profiles/{userId}/{imageId} {
      allow read: if isAuthenticated();
      allow create: if isOwner(userId)
        && isImageType()
        && isValidFileSize();
      allow update, delete: if isOwner(userId);
    }

    // 기타 모든 경로는 기본적으로 차단
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
